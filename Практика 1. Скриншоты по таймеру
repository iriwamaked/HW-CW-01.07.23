using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.Drawing.Imaging;
using System.IO;
//using System.Threading;

namespace ScreenshotCapturer
{
    public partial class Form1 : Form
    {
        private static Bitmap bmpScreenshot;
        private static Graphics gfxScreenshot;
        private Timer timerScreenshot;
        private string folderPath;

        public Form1()
        {
            InitializeComponent();
            
            //timerScreenshot.Start();
        }


        private void timerScreenshot_Tick(object sender, EventArgs e)
        {
            string fileName=Path.Combine(folderPath, DateTime.Now.ToString("yyyy_MM_dd_HH_mm_ss") + ".png");
            //без юзингов, видимо, неправильно освобождаются ресурсы, Проводник ругается и выдает ошибку
            using (bmpScreenshot = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height, PixelFormat.Format32bppArgb))
            {
                using (gfxScreenshot = Graphics.FromImage(bmpScreenshot))
                {
                    gfxScreenshot.CopyFromScreen(Screen.PrimaryScreen.Bounds.X, Screen.PrimaryScreen.Bounds.Y, 0, 0, Screen.PrimaryScreen.Bounds.Size, CopyPixelOperation.SourceCopy);
                    bmpScreenshot.Save(fileName, ImageFormat.Png);
                }
            }
           
            
            //MessageBox.Show("ScreenShot " + fileName + "created");
        }
        private void btnCapture_Click(object sender, EventArgs e)
        {
            folderPath = Path.Combine("C:\\", "1");
            Directory.CreateDirectory(folderPath);

            timerScreenshot = new Timer();
            timerScreenshot.Interval = 5000;
            timerScreenshot.Tick += new EventHandler(timerScreenshot_Tick);
            timerScreenshot.Start();
            
            // If the user has chosen a path where to save the screenshot
            //if (saveScreenshot.ShowDialog() == DialogResult.OK)
            //{
            //    // Hide the form so that it does not appear in the screenshot
            //    this.Hide();
            //    Thread.Sleep(400);
            //    // Set the bitmap object to the size of the screen
            //    bmpScreenshot = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height, PixelFormat.Format32bppArgb);
            //    // Create a graphics object from the bitmap
            //    gfxScreenshot = Graphics.FromImage(bmpScreenshot);
            //    // Take the screenshot from the upper left corner to the right bottom corner
            //    gfxScreenshot.CopyFromScreen(Screen.PrimaryScreen.Bounds.X, Screen.PrimaryScreen.Bounds.Y, 0, 0, Screen.PrimaryScreen.Bounds.Size, CopyPixelOperation.SourceCopy);
            //    // Save the screenshot to the specified path that the user has chosen
            //    bmpScreenshot.Save(saveScreenshot.FileName, ImageFormat.Png);
            //    // Show the form again
            //    this.Show();
            //}
        }

        private void button1_Click(object sender, EventArgs e)
        {
            timerScreenshot.Stop();
        }
    }
}
